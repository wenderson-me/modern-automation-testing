{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-14T05:50:34.935Z",
    "end": "2022-05-14T05:50:36.261Z",
    "duration": 1326,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "51cff2a7-c754-44b8-999d-b27833c35352",
      "title": "",
      "fullFile": "cypress/integration/request/request.spec.js",
      "file": "cypress/integration/request/request.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7cf90f45-3adf-449d-8edd-aa6472f2d35b",
          "title": "Request API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Post book",
              "fullTitle": "Request API Post book",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://216.10.245.166/Library/Addbook.php',\n  body: {\n    \"name\": name,\n    \"isbn\": isbn,\n    \"aisle\": aisle,\n    \"author\": author\n  }\n}).then(response => {\n  id = response.body.ID;\n  expect(response.status).to.eq(200);\n  expect(response.body.Msg, \"Success\").to.be.equal('successfully added');\n  expect(response.body.ID, \"ID\").to.be.equal(id);\n});",
              "err": {},
              "uuid": "5cb22f5c-751b-4182-96d0-cdc82037209f",
              "parentUUID": "7cf90f45-3adf-449d-8edd-aa6472f2d35b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get book",
              "fullTitle": "Request API Get book",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `http://216.10.245.166/Library/GetBook.php?ID=${id}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body[0].book_name, \"Book Name\").to.be.equal(name);\n  expect(response.body[0].isbn, \"isbn\").to.be.eq(isbn);\n  expect(response.body[0].aisle, \"aisle\").to.include(aisle);\n  expect(response.body[0].author, \"author\").to.be.equal(author);\n});",
              "err": {},
              "uuid": "8a70de86-c6be-4bf9-957b-98efbba87692",
              "parentUUID": "7cf90f45-3adf-449d-8edd-aa6472f2d35b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get author",
              "fullTitle": "Request API Get author",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `http://216.10.245.166/Library/GetBook.php?AuthorName=${author}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body[0].book_name, \"Book Name\").to.be.equal(name);\n  expect(response.body[0].isbn, \"isbn\").to.be.eq(isbn);\n  expect(response.body[0].aisle, \"aisle\").to.include(aisle);\n});",
              "err": {},
              "uuid": "2cc7a65a-a6a6-43ef-bbad-f43d523c613a",
              "parentUUID": "7cf90f45-3adf-449d-8edd-aa6472f2d35b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete book",
              "fullTitle": "Request API Delete book",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: 'http://216.10.245.166/Library/DeleteBook.php',\n  body: {\n    \"ID\": id\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.msg, \"Success\").to.be.equal('book is successfully deleted');\n});",
              "err": {},
              "uuid": "f0b3ef7d-4cc5-4172-a4aa-af119d99e8d2",
              "parentUUID": "7cf90f45-3adf-449d-8edd-aa6472f2d35b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cb22f5c-751b-4182-96d0-cdc82037209f",
            "8a70de86-c6be-4bf9-957b-98efbba87692",
            "2cc7a65a-a6a6-43ef-bbad-f43d523c613a",
            "f0b3ef7d-4cc5-4172-a4aa-af119d99e8d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}